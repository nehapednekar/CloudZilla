{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Assignment 6 template for creating IAM Policies, IAM Roles, Code Deploy Application and S3 bucket!!",
    "Parameters": {
        "CodeDeployEC2S3PolicyName": {
            "Type": "String"
        },
        "TravisUploadToS3PolicyName": {
            "Type": "String"
        },
        "TravisCodeDeployPolicyName": {
            "Type": "String"
        },
        "CodeDeployEC2ServiceRoleName": {
            "Type": "String"
        },
        "CodeDeployServiceRoleName": {
            "Type": "String"
        },
        "CodeDeployS3BucketName": {
            "Type": "String"
        },
        "TravisUser": {
            "Type": "String"
        },
        "CodeDeployApplicationName": {
            "Type": "String"
        },
        "AWSRegion": {
            "Type": "String"
        },
        "AWSAccountID": {
            "Type": "String"
        },
        "cloudwatchpolicy":{
            "Type":"String"
        },
        "snspolicy":{
            "Type":"String"
        }
    },
    "Resources": {
        "MyCodeDeployEC2ServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Effect": "Allow"
                        }
                    ]
                },
                "RoleName": {
                    "Ref": "CodeDeployEC2ServiceRoleName"
                },


                "Policies": [
                    {
                        "PolicyName": "AWSCodeDeployRolenew",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "autoscaling:CompleteLifecycleAction",
                                        "autoscaling:DeleteLifecycleHook",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "autoscaling:DescribeLifecycleHooks",
                                        "autoscaling:PutLifecycleHook",
                                        "autoscaling:RecordLifecycleActionHeartbeat",
                                        "autoscaling:CreateAutoScalingGroup",
                                        "autoscaling:UpdateAutoScalingGroup",
                                        "autoscaling:EnableMetricsCollection",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "autoscaling:DescribePolicies",
                                        "autoscaling:DescribeScheduledActions",
                                        "autoscaling:DescribeNotificationConfigurations",
                                        "autoscaling:DescribeLifecycleHooks",
                                        "autoscaling:SuspendProcesses",
                                        "autoscaling:ResumeProcesses",
                                        "autoscaling:AttachLoadBalancers",
                                        "autoscaling:PutScalingPolicy",
                                        "autoscaling:PutScheduledUpdateGroupAction",
                                        "autoscaling:PutNotificationConfiguration",
                                        "autoscaling:PutLifecycleHook",
                                        "autoscaling:DescribeScalingActivities",
                                        "autoscaling:DeleteAutoScalingGroup",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeInstanceStatus",
                                        "ec2:TerminateInstances",
                                        "tag:GetTags",
                                        "tag:GetResources",
                                        "sns:Publish",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "elasticloadbalancing:DescribeLoadBalancers",
                                        "elasticloadbalancing:DescribeInstanceHealth",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:DescribeTargetGroups",
                                        "elasticloadbalancing:DescribeTargetHealth",
                                        "elasticloadbalancing:RegisterTargets",
                                        "elasticloadbalancing:DeregisterTargets"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }

    },

        "MyLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonSESFullAccess",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                }
            }
        },

        "MyCodeDeployServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "codedeploy.amazonaws.com"
                            },
                            "Effect": "Allow"
                        }
                    ]
                },
                "RoleName": {
                    "Ref": "CodeDeployServiceRoleName"
                }
            }
        },
        "MyCodeDeployEC2S3Policy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "CodeDeployEC2S3PolicyName"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:Get*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "MyCodeDeployEC2ServiceRole"
                    }
                ]
            }
        },
        "MyTravisUploadToS3Policy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "TravisUploadToS3PolicyName"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "Users": [
                    {
                        "Ref": "TravisUser"
                    }
                ]
            }
        },
        "MyPolicySNS": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "snspolicy"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sns:*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },

                "Roles": [
                    {
                        "Ref": "MyCodeDeployEC2ServiceRole"
                    }
                ]
            }
        },


        "MyPolicyCloudwatch": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "cloudwatchpolicy"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        }
                    ]
                },

                "Roles": [
                    {
                        "Ref": "MyCodeDeployEC2ServiceRole"
                    }
                ]
            }
        },



        "myS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Description": "S3 bucket where build artifacts from TravisCI will be deployed",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": {
                    "Ref": "CodeDeployS3BucketName"
                }
            }
        },
        "MyCodeDeployApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplicationName"
                }
            }
        },
        "MyCodeDeploymentGroup":{
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplicationName"
                },
                "DeploymentGroupName": {
                    "Ref": "CodeDeployApplicationName"
                },
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "MyCodeDeployServiceRole",
                        "Arn"
                    ]
                }
            }


        },
        "MyTravisCodeDeployPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "TravisCodeDeployPolicyName"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:RegisterApplicationRevision",
                                "codedeploy:GetApplicationRevision"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:codedeploy",
                                            {
                                                "Ref": "AWSRegion"
                                            },
                                            {
                                                "Ref": "AWSAccountID"
                                            },
                                            "application",
                                            {
                                                "Ref": "CodeDeployApplicationName"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetDeployment"
                            ],
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:GetDeploymentConfig"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:codedeploy",
                                            {
                                                "Ref": "AWSRegion"
                                            },
                                            {
                                                "Ref": "AWSAccountID"
                                            },
                                            "deploymentconfig:CodeDeployDefault.OneAtATime"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:codedeploy",
                                            {
                                                "Ref": "AWSRegion"
                                            },
                                            {
                                                "Ref": "AWSAccountID"
                                            },
                                            "deploymentconfig:CodeDeployDefault.HalfAtATime"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:codedeploy",
                                            {
                                                "Ref": "AWSRegion"
                                            },
                                            {
                                                "Ref": "AWSAccountID"
                                            },
                                            "deploymentconfig:CodeDeployDefault.AllAtOnce"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Users": [
                    {
                        "Ref": "TravisUser"
                    }
                ]
            }
        }
    }
}
